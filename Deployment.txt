Review Deployment Type

Pilot Deployment: A pilot light approach minimizes the ongoing cost of disaster recovery by minimizing the active resources, and simplifies recovery at the time of a disaster because the core infrastructure requirements are all in place. This recovery option requires you to change your deployment approach

Warm Standby Deployment: The warm standby approach involves ensuring that there is a scaled down, but fully functional, copy of your production environment in another Region. This approach extends the pilot light concept and decreases the time to recovery because your workload is always-on in another Region. This approach also allows you to more easily perform testing or implement continuous testing to increase confidence in your ability to recover from a disaster.

Cattle Deployment

Blue/Green Deployment: The immutable pattern specifies a deployment of application code by starting an entirely new set of servers with a new configuration or version of application code. This pattern leverages the cloud capability that new server resources are created with simple API calls.
The blue/green deployment strategy is a type of immutable deployment which also requires creation of another environment. Once the new environment is up and passed all tests, traffic is shifted to this new deployment. Crucially the old environment, that is the "blue" environment, is kept idle in case a rollback is needed.


In-place Deployment: All at once (in-place deployment) is a method you can use to roll out new application code to an existing fleet of servers. This method replaces all the code in one deployment action. It requires downtime because all servers in the fleet are updated at once. There is no need to update existing DNS records. In case of a failed deployment, the only way to restore operations is to redeploy the code on all servers again

Rolling deployment : the fleet is divided into portions so that all of the fleet isnâ€™t upgraded at once. During the deployment process two software versions, new and old, are running on the same fleet. This method allows a zero-downtime update. If the deployment fails, only the updated portion of the fleet will be affected.A variation of the rolling deployment method, called canary release, involves deployment of the new software version on a very small percentage of servers at first. This way, you can observe how the software behaves in production on a few servers, while minimizing the impact of breaking changes. If there is an elevated rate of errors from a canary deployment, the software is rolled back. Otherwise, the percentage of servers with the new version is gradually increased.



Beanstalk Deployment

> All At Once (In Place): 
    > Deploy all in one go. 
    > Fastest
    > Drawback is instances that aren't available to serve traffic for a bit
    > Traffic downtime during depoyment
    > no additional cost

> Rolling : 
    > Update a few instances at a time
    > Moves onto the next bucket or instance once the previous one is healthy
    > Application not running at capacity
    > No additional cost

> Rolling with additional batches : 
    > Old application still available
    > Spins up new instances instead of updating the previous instance
    > small additional cost
    > Great for production

> Immutable :
    > spins up new instances in a new ASG
    > deploys version to these instances 
    > swaps all the instances when everything is healthy
    > zero downtime
    > In this mode, a full set of new instances running the new version of the application in a separate Auto Scaling Group is launched. 
      To roll back quickly, this mode terminates the ASG holding the new application version, while the current one is untouched and already running         at full capacity.
> Blue Green :
    > creates a new environment
    > switch over when ready
    > zero down time
    > swap url when green
> Traffic Splitting
  > Canary Testing - sends a small % of traffic to new deployment


IAM database authentication works with MariaDB, MySQL, and PostgreSQL
